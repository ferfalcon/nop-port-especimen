@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics

@inject IWorkContext workContext

@{
	var topicsLinksCol1 = Model.Topics?.Where(x => x.IncludeInFooterColumn1).ToList() ?? new List<FooterModel.FooterTopicModel>();
	var footerLinksCol1 = new List<(bool Condition, string RouteName, string TranslationKey)> {
				(Model.SitemapEnabled && Model.DisplaySitemapFooterItem, "Sitemap", "Sitemap"),
				(Model.NewsEnabled && Model.DisplayNewsFooterItem, "NewsArchive", "News"),
				(Model.BlogEnabled && Model.DisplayBlogFooterItem, "Blog", "Blog"),
				(Model.DisplayContactUsFooterItem, "ContactUs", "ContactUs"),
			};

	var topicsLinksCol2 = Model.Topics?.Where(x => x.IncludeInFooterColumn2).ToList() ?? new List<FooterModel.FooterTopicModel>();
	var footerLinksCol2 = new List<(bool Condition, string RouteName, string TranslationKey)> {
				(Model.SearchEnabled && Model.DisplayProductSearchFooterItem, "ProductSearch", "Search"),
				(Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem, "RecentlyViewedProducts", "Products.RecentlyViewedProducts"),
				(Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem, "NewProducts", "Products.NewProducts"),
				(Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem, "CompareProducts", "Products.Compare.List"),
				(Model.ForumEnabled && Model.DisplayForumsFooterItem, "Boards", "Forum.Forums"),
				(Model.AllowCustomersToCheckGiftCardBalance, "CheckGiftCardBalance", "CheckGiftCardBalance"),
			};

	var topicsLinksCol3 = Model.Topics?.Where(x => x.IncludeInFooterColumn3).ToList() ?? new List<FooterModel.FooterTopicModel>();
	var footerLinksCol3 = new List<(bool Condition, string RouteName, string TranslationKey)> {
				(Model.DisplayCustomerInfoFooterItem, "CustomerInfo", "Account.MyAccount"),
				(Model.DisplayCustomerOrdersFooterItem, "CustomerOrders", "Account.CustomerOrders"),
				(Model.DisplayCustomerAddressesFooterItem, "CustomerAddresses", "Account.CustomerAddresses"),
				(Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem, "ShoppingCart", "ShoppingCart"),
				(Model.WishlistEnabled && Model.DisplayWishlistFooterItem, "Wishlist", "Wishlist"),
				(Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem, "ApplyVendorAccount", "Vendors.ApplyAccount"),
			};
}

<footer class="footer">
	<div class="footer__upper-section">
		@if (topicsLinksCol1.Any() || footerLinksCol1.Any(link => link.Condition))
		{
			<nav class="wrapper-box   wrapper-box--footer-topic-colm">
				<h2 class="wrapper-box__label">@T("Footer.Information")</h2>
				<ul class="wrapper-box__content">
					@foreach (var topic in topicsLinksCol1)
					{
						<li>
							<a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
						</li>
					}
					@foreach (var link in footerLinksCol1.Where(link => link.Condition))
					{
						<li>
							<a href="@Url.RouteUrl(link.RouteName)">@T(link.TranslationKey)</a>
						</li>
					}
				</ul>
			</nav>
		}
		@if (topicsLinksCol2.Any() || footerLinksCol2.Any(link => link.Condition))
		{
			<nav class="wrapper-box   wrapper-box--footer-topic-colm">
				<h2 class="wrapper-box__label">@T("Footer.CustomerService")</h2>
				<ul class="wrapper-box__content">
					@foreach (var topic in topicsLinksCol2)
					{
						<li>
							<a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
						</li>
					}
					@foreach (var link in footerLinksCol2.Where(link => link.Condition))
					{
						<li>
							<a href="@Url.RouteUrl(link.RouteName)">@T(link.TranslationKey)</a>
						</li>
					}
				</ul>
			</nav>
		}
		@if (topicsLinksCol3.Any() || footerLinksCol3.Any(link => link.Condition))
		{
			<nav class="wrapper-box   wrapper-box--footer-topic-colm">
				<h2 class="wrapper-box__label">@T("Footer.MyAccount")</h2>
				<ul class="wrapper-box__content">
					@foreach (var topic in topicsLinksCol3)
					{
						<li>
							<a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
						</li>
					}
					@foreach (var link in footerLinksCol3.Where(link => link.Condition))
					{
						<li>
							<a href="@Url.RouteUrl(link.RouteName)">@T(link.TranslationKey)</a>
						</li>
					}
				</ul>
			</nav>
		}
		@await Component.InvokeAsync(typeof(SocialButtonsViewComponent))
		@await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))
	</div>
	<p class="footer__lower-section">
		@if (!Model.HidePoweredByNopCommerce)
		{
			<small class="footer-lower__powered-by">
				Powered by <a href="@(OfficialSite.Main)" target="_blank" @(Model.IsHomePage ? string.Empty : "rel=nofollow")>nopCommerce</a>
			</small>
		}
		<small>@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</small>
		@if (Model.DisplayTaxShippingInfoFooter)
		{
			var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
			<small>@T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo"))</small>
		}
		@await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent))
	</p>
	@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer, additionalData = Model })
</footer>
<script asp-location="Footer">
	$(function () {
		$('.block .title').on('click', function () {
			var e = window, a = 'inner';
			if (!('innerWidth' in window)) {
				a = 'client';
				e = document.documentElement || document.body;
			}
			var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
			if (result.width < 1001) {
				$(this).siblings('.listbox').slideToggle('slow');
			}
		});
	});
</script>